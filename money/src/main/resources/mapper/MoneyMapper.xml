<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.colin.money.dao.MoneyMapper">

    <!--做返回结果映射，添加了resultMap之后，在select中就可以将resultMap指定为userResultMap，结果会映射为对象-->
    <resultMap id="convertibleBondResultMap" type="ConvertibleBond">
        <id property="id" column="id"/>
        <result property="bondCode" column="bond_code"/>
        <result property="bondName" column="bond_name"/>
        <result property="bondPrice" column="bond_price"/>
        <result property="pb" column="pb"/>
        <result property="changeStockPrice" column="change_stock_price"/>
        <result property="changeStockValue" column="change_stock_value"/>
        <result property="pureBondValue" column="pure_bond_value"/>
        <result property="optionValue" column="option_value"/>
        <result property="sellBackTrigger" column="sell_back_trigger"/>
        <result property="holdingOrganization" column="holding_organization"/>
        <result property="dueDate" column="due_date"/>
        <result property="remainingScale" column="remaining_scale"/>
        <result property="turnover" column="turnover"/>
        <result property="turnoverRate" column="turnover_rate"/>
        <result property="yieldBeforeMaturity" column="yield_before_maturity"/>
        <result property="sellBackProceed" column="sell_back_proceed"/>
        <result property="score" column="score"/>
        <!--关联st_stock表，javaType中指定Stock的类路径，property中是对象的属性-->
        <association property="stockId" javaType="com.colin.money.model.Stock">
            <!--此处的id指Stock对象中的属性，stock_id是st_convertible_bond表中的stock_id关联字段-->
            <id property="id" column="stock_id"/>
            <result property="stockCode" column="stock_code"/>
            <result property="stockName" column="stock_name"/>
        </association>
    </resultMap>

    <sql id="select_bond_statement">
      select
        cb.id,
        cb.bond_code,
        cb.bond_name,
        cb.bond_price,
	    cb.stock_id,
	    cb.pb,
        cb.change_stock_price,
	    cb.change_stock_value,
	    cb.pure_bond_value,
	    cb.option_value,
	    cb.sell_back_trigger,
	    cb.holding_organization,
	    cb.due_date,
	    cb.remaining_scale,
	    cb.turnover,
	    cb.turnover_rate,
	    cb.yield_before_maturity,
	    cb.sell_back_proceed,
	    cb.score
      from st_convertible_bond cb left join st_stock s on cb.stock_id = s.id
      where 1 = 1
    </sql>

    <select id="fetchById" parameterType="java.lang.Object" resultMap="convertibleBondResultMap">
        <include refid="select_bond_statement"/>
        and t.id = #{id}
    </select>

    <select id="fetchList" parameterType="java.util.HashMap" resultMap="convertibleBondResultMap">
        <include refid="select_bond_statement"/>
    </select>
    <!--
    <insert id="save" parameterType="User">
        insert into user(name,password,identify_type,identify_number,dept_id)
        values(#{name},#{password},#{identifyType},#{identifyNumber},#{department.id})
    </insert>
    -->
    <!--
    <update id="update" parameterType="User">
        update user
        <trim prefix="set" suffix="where id = #{id}" suffixOverrides=",">
            <if test="name != null">name=#{name},</if>
            <if test="password != null">password=#{password},</if>
            <if test="identifyType != null">identify_type=#{identifyType},</if>
            <if test="identifyNumber != null">identify_number=#{identifyNumber},</if>
            <if test="department.id != null">dept_id=#{department.id},</if>
        </trim>
    </update>
    -->
    <!--
    <delete id="deleteById" parameterType="java.lang.Object">
        delete from user where id = #{id};
    </delete>
    -->
</mapper>
